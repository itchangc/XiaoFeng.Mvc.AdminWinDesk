@inject IConfiguration config
@model List<MenuData>
@{
	ViewBag.Title = Translations.Get("admin:fayelfadmin");
	var PageData = new PageData(ViewData);
	var admin = AdminUser.Current;
	var AdminHome = config.GetConfig("Settings:AdminHome");
	if (AdminHome.IsNullOrEmpty()) AdminHome = "Home/Home";

	/**
		* 桌面图标
		*/

	var lista = VIEWDesktopModel.Create.Where(a => a.Pass == true).OrderBy(a => a.SortID).ToList();
	var DeskIcons = new List<dynamic>();

	lista.Each(a =>
	{
		DeskIcons.Add(new
		{
			id = a.ID,
			name = a.Name,
			url = a.Url,
			image = a.ImageUrl,
			icon = a.Icon,
			@class = a.Class,
			style = a.Style,
			type = 0,//0 图标 1分组
			width = a.Width,
			height = a.Height,
			@lock = a.Lock.Value ? 1 : 0
		});
	});
	/*
	* 开始菜单
	*/
	var SubMenus = new List<dynamic>();
	Model.Each(m =>
	{
		var subMenus = new List<dynamic>();
		if (m.ChildCount > 0)
		{
			m.Data.Each(s =>
			{
				subMenus.Add(new
				{
					name = s.Name,
					url = s.Url,
					type = 0,
					icon = s.Icon
				});
			});
		}
		SubMenus.Add(new
		{
			name = m.Name,
			url = m.Url,
			type = 0,
			icon = m.Icon,
			children = subMenus
		});
	});
}
<link href="/css/fayelf.min.css" type="text/css" rel="stylesheet" />
<link href="/windesk/css/alerter.min.css" rel="stylesheet" type="text/css" />
<link href="/windesk/css/windesk.min.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/windesk/scripts/alerter.min.js"></script>
<script type="text/javascript" src="/windesk/scripts/windesk.min.js"></script>
<div class="windesk"></div>
<script type="text/javascript">
	layui.use(['jquery', 'form', 'windesk', 'layer'], function () {
		var $ = layui.$
			, form = layui.form
			, windesk = layui.windesk
			, layer = layui.layer;
		var logout = function () {
			layer.confirm("您确定要退出当前系统吗?", { icon: 0, title: '询问' }, function () {
				$.ajax({
					url: '/' + AdminAreaName + '/Login/LogOut',
					type: 'post',
					success: function (e) {
						if (e.status == 'success') {
							//window.parent.location.href = '/' + AdminAreaName+'/Login';
							window.parent.location.href = "/Admin/Login";
						} else {
							layer.alert("服务器出错.", { icon: 2 });
						}
					}
				});
			});
		};

		windesk.render({
			elem: '.windesk',
			iconalign: 1,//横排还是坚排 0 是横排 1是竖排
			debug: false,
			dragicon: true,
			deskicon: @Html.Raw(DeskIcons.ToJson()),
			contextmenu: [{
				name: '桌面设置',
				icon: 'zw-icon zw-icon-set',
				event: function (o, event, desk) {
					desk.Open('桌面设置', '桌面设置', 600, 400, 'zw-icon zw-icon-set3', 1);
				}
			},
			{
				name: '',
				icon: '',
				event: null,
				condition: null
			},
			{
				name: '关于我们',
				icon: 'zw-icon zw-icon-about',
				event: function (o, event, desk) {
					desk.Open('关于我们', '<table cellpadding="1" cellspacing="1" width="100%" class="fay-table about">\
			<tbody>\
						<tr><th width="80">版本</th><td>DeskTop v1.0</td></tr>\
				<tr><th>作者</th><td>Jacky</td></tr>\
					<tr><th>Email</th><td>Jacky@fayelf.com</td></tr>\
				<tr><th>QQ</th><td>7092734</td></tr>\
						<tr><th>网址</th><td>http://www.fayelf.com</td></tr>\
						<tr><th>版权</th><td>Copyright © (2018 - 2024) FAYELF All Rights Reserved.</td></tr>\
			</tbody>\
		</table>', 0, 0, 'zw-icon zw-icon-set3', 1);
				}
			},
			{
				name: '退出系统',
				icon: 'zw-icon zw-icon-logout2',
				event: function () {
					logout();
				}
			}],
			startmenu: {
				sidebar: [{
					name: 'empty',
					url: '',
					type: 0,
					icon: ''
				},
				{
					name: '帐户',
					url: '/' + AdminAreaName + '/AdminUser/Profile?iframe=1',
					type: 0,
					icon: 'zw-icon zw-icon-user',
				},
				{
					name: '修改密码',
					url: '/' + AdminAreaName + '/AdminUser/ModifyPwd?iframe=1',
					type: 0,
					icon: 'zw-icon zw-icon-key',
				},
				{
					name: '清除缓存',
					url: '',
					type: 0,
					icon: 'zw-icon zw-icon-clear',
					event: function () {
						layer.confirm("您确定要清除当前系统缓存吗?", { icon: 0, title: '询问' }, function () {
							$.ajax({
								type: 'post',
								url: '/' + AdminAreaName + '/Home/ClearCache', success: function (e) {
									layer.alert('清除缓存成功.', { icon: 1 }, function (index) {
										layer.close(index);
									});
								}
							});
						});
					}
				},
				{
					name: '重启站点',
					url: '',
					type: 0,
					icon: 'zw-icon zw-icon-refresh',
					event: function () {
						layer.confirm("您确定要重启当前系统吗?", { icon: 0, title: '询问' }, function () {
							$.ajax({
								type: 'post',
								url: '/' + AdminAreaName + '/Home/Restart', success: function (e) {
									layer.alert('重启站点成功.', { icon: 1 }, function (index) {
										layer.close(index);
									});
								}
							});
						});
					}
				},
				{
					name: '设置',
					url: '/' + AdminAreaName + '/ProgramSet',
					type: 0,
					icon: 'zw-icon zw-icon-set'
				},
				{
					name: '退出',
					url: '',
					type: 0,
					icon: 'zw-icon zw-icon-logout2',
					event: logout
				}],
				submenu: @Html.Raw(SubMenus.ToJson())
				},
			event: {
				desktop: {
					added: function (o, data, desk) {
						$.ajax({
							type: 'post',
							data: "Name=" + data.name + "&Icon=" + data.icon + "&Type=1&Url=" + data.url,
							url: '/' + AdminAreaName + '/Desktop/Add',
							success: function (e) {
								if (e.status == 'success') {
									layer.msg('添加快捷图标成功.');
								} else {
									layer.msg('添加快捷图标失败');
									desk.RemoveDesktopIcon(0);
								}
							},
							error: function () {
								layer.msg('添加快捷图标失败');
								desk.RemoveDesktopIcon(0);
							}
						});
					},
					moved: function (li) {
						var data = [];
						$(li).each(function (i) {
							var id = $(this).attr("data-id") || '';
							if (id == '' || id == 0) return;
							data.push({
								id: id, sort: i
							});
						});
						if (data.length == 0) return;
						$.ajax({
							method: 'post',
							contentType: 'application/json',
							data: JSON.stringify(data),
							url: '/' + AdminAreaName + '/Desktop/SetSort',
							success: function (e) {

							},
							error: function () {

							}
						});
					},
					removed: function (id) {
						id = id || '';
						if (id == 0 || id == '') return;
						$.ajax({
							type: 'post',
							data: { ID: id },
							url: '/' + AdminAreaName + '/Desktop/Delete',
							success: function (e) {
								if (e.status == 'success') {
									layer.msg('删除快捷图标成功.');
								} else {
									layer.msg('删除快捷图标失败');
								}
							},
							error: function () {
								layer.msg('删除快捷图标失败');
							}
						});
					}
				}
			}
		});
		$(function () {
			return;
			//切换图标排列方式(横向/纵向)
			$('#changeicon').click(function () {
				if ($('#xy').val() == 'x') {
					$('#xy').val('y');
				} else {
					$('#xy').val('x');
				}
				updateIcon();
				if ($('#desktop .grid').length != 0) {
					$('#desktop .grid').remove();
					showGrid();
				}
				if ($('#desktop .movegrid').length != 0) {
					$('#desktop .movegrid').remove();
					showMoveGrid();
				}
			});
			//显示/隐藏大格子
			$('#showgrid').click(function () {
				if ($('#desktop .grid').length != 0) {
					$('#desktop .grid').remove();
				} else {
					showGrid();
				}
			});
			//显示/隐藏小格子
			$('#showmovegrid').click(function () {
				if ($('#desktop .movegrid').length != 0) {
					$('#desktop .movegrid').remove();
				} else {
					showMoveGrid();
				}
			});
			//显示/隐藏大格子编号
			$('#showgridnum').click(function () {
				if ($('#desktop .grid').length != 0) {
					if ($('#desktop .grid:first').hasClass('tip')) {
						$('#desktop .grid').removeClass('tip');
					} else {
						$('#desktop .grid').addClass('tip');
					}
				}
			});
			//显示/隐藏小格子编号
			$('#showmovegridnum').click(function () {
				if ($('#desktop .movegrid').length != 0) {
					if ($('#desktop .movegrid:first').hasClass('tip')) {
						$('#desktop .movegrid').removeClass('tip');
					} else {
						$('#desktop .movegrid').addClass('tip');
					}
				}
			});
			var getGrid = function () {
				var width = $('#desktop').width(), height = $('#desktop').height();
				var grid = [];
				var top = 0, left = 0;
				//准备48个格子区域
				for (var i = 0; i < 48; i++) {
					grid.push({
						startY: top,
						endY: top + 100,
						startX: left,
						endX: left + 100
					});
					if ($('#xy').val() == 'x') {
						left += 100;
						if (left + 100 > width) {
							top += 100;
							left = 0;
						}
					} else {
						top += 100;
						if (top + 100 > height) {
							top = 0;
							left += 100;
						}
					}

				}
				return grid;
			};
			var searchGrid = function (x, y) {
				var grid = getGrid();
				var flag = null;
				for (var i = 0; i < grid.length; i++) {
					if (x >= grid[i].startX && x <= grid[i].endX && y >= grid[i].startY && y <= grid[i].endY) {
						flag = i;
					}
				}
				return flag;
			};
			var showGrid = function () {
				var grid = getGrid();
				for (var i = 0; i < grid.length; i++) {
					$('#desktop').append('<div class="grid" style="left:' + grid[i].startX + 'px;top:' + grid[i].startY + 'px">' + i + '</div>');
				}
			};
			var getMoveGrid = function () {
				var grid = getGrid();
				var movegrid = [];
				for (var i = 0; i < grid.length; i++) {
					var top = grid[i].startY, left = grid[i].startX;
					for (var j = 0; j < 4; j++) {
						movegrid.push({
							startY: top,
							endY: top + 50,
							startX: left,
							endX: left + 50
						});
						left += 50;
						if (left + 50 > grid[i].endX) {
							top += 50;
							left = grid[i].startX;
						}
					}
				}
				return movegrid;
			};
			var searchMoveGrid = function (x, y) {
				var movegrid = getMoveGrid();
				var flag = null;
				for (var i = 0; i < movegrid.length; i++) {
					if (x >= movegrid[i].startX && x <= movegrid[i].endX && y >= movegrid[i].startY && y <= movegrid[i].endY) {
						flag = i;
					}
				}
				return flag;
			};
			var showMoveGrid = function () {
				var grid = getMoveGrid();
				for (var i = 0; i < grid.length; i++) {
					$('#desktop').append('<div class="movegrid" style="left:' + grid[i].startX + 'px;top:' + grid[i].startY + 'px">' + i + '</div>');
				}
			};
			//加载图标
			var setIcon = function () {
				var grid = getGrid();
				for (var i = 0; i < 30; i++) {
					$('#desktop').append('<div class="icon" style="left:' + grid[i].startX + 'px;top:' + grid[i].startY + 'px">' + i + '</div>');
				}
			};
			//更新图标位置
			var updateIcon = function () {
				var grid = getGrid();
				$('#desktop .icon').each(function (i) {
					$(this).animate({
						left: grid[i].startX,
						top: grid[i].startY
					});
				});
			};
			//图标拖动
			$('#desktop').on('mousedown', '.icon', function (e) {
				e.preventDefault();
				e.stopPropagation();
				var oldobj = $(this);
				var obj = $('<div id="temp" class="icon">' + oldobj.html() + '</div>');
				var dx = e.clientX;
				var dy = e.clientY;
				var cx = e.clientX;
				var cy = e.clientY;
				var x = dx - oldobj.offset().left;
				var y = dy - oldobj.offset().top;
				//绑定鼠标移动事件
				$(document).on('mousemove', function (e) {
					$('body').append(obj);
					cx = e.clientX <= 0 ? 0 : e.clientX >= $(window).width() ? $(window).width() : e.clientX;
					cy = e.clientY <= 0 ? 0 : e.clientY >= $(window).height() ? $(window).height() : e.clientY;
					if (dx != cx || dy != cy) {
						obj.css({
							left: cx - x,
							top: cy - y
						}).show();
					}
					//高亮显示移动区域
					var grid_index = searchGrid(cx - $('#desktop').offset().left, cy - $('#desktop').offset().top);
					$('#desktop .grid').css('backgroundColor', '');
					$('#desktop .grid:eq(' + grid_index + ')').css('backgroundColor', '#aaa');
					var movegrid_index = searchMoveGrid(cx - $('#desktop').offset().left, cy - $('#desktop').offset().top);
					$('#desktop .movegrid').css('backgroundColor', '');
					$('#desktop .movegrid:eq(' + movegrid_index + ')').css('backgroundColor', '#333');
				}).on('mouseup', function () {
					$('#desktop .grid').css('backgroundColor', '');
					$('#desktop .movegrid').css('backgroundColor', '');
					$(document).off('mousemove').off('mouseup');
					obj.remove();
					//判断拖动位置
					var grid_index = searchGrid(cx - $('#desktop').offset().left, cy - $('#desktop').offset().top);
					if (grid_index > $('#desktop .icon').length - 1 && oldobj.index() != $('#desktop .icon').length - 1) {
						$('#desktop .icon:last').after(oldobj);
					} else {
						if (grid_index != null && grid_index != oldobj.index()) {
							var movegrid_index = searchMoveGrid(cx - $('#desktop').offset().left, cy - $('#desktop').offset().top);
							if ($('#xy').val() == 'x') {
								if (movegrid_index % 4 == 0 || movegrid_index % 4 == 2) {
									$('#desktop .icon:eq(' + grid_index + ')').before(oldobj);
								} else {
									$('#desktop .icon:eq(' + grid_index + ')').after(oldobj);
								}
							} else {
								if (movegrid_index % 4 == 0 || movegrid_index % 4 == 1) {
									$('#desktop .icon:eq(' + grid_index + ')').before(oldobj);
								} else {
									$('#desktop .icon:eq(' + grid_index + ')').after(oldobj);
								}
							}
						}
					}
					updateIcon();
				});
			});
			setIcon();
		});
	});
</script>